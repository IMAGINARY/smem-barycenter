{"mappings":"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","sources":["src/ts/main.ts"],"sourcesContent":["interface Point {\n  x: number;\n  y: number;\n}\n\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d', {\n  willReadFrequently: true,\n}) as CanvasRenderingContext2D;\nconst w = canvas.width;\nconst h = canvas.height;\n\nconsole.log('width: ', w);\nconsole.log('height: ', h);\n\nlet path = [] as Point[];\nconst lastPoint = { x: 0, y: 0 };\nconst stickLength = 1;\nlet drawing = false;\n\ncanvas.addEventListener('pointermove', dragged);\ncanvas.addEventListener('pointerdown', pointedDown);\ncanvas.addEventListener('pointerup', pointedUp);\ncanvas.addEventListener('pointerout', pointedUp);\n\nfunction dragged(e: PointerEvent): void {\n  if (drawing) {\n    const d =\n      (lastPoint.x - e.offsetX) * (lastPoint.x - e.offsetX) +\n      (lastPoint.y - e.offsetY) * (lastPoint.y - e.offsetY);\n    if (d > stickLength * stickLength) {\n      lastPoint.x = e.offsetX;\n      lastPoint.y = e.offsetY;\n      path.push({ x: lastPoint.x, y: lastPoint.y });\n      draw();\n    }\n  }\n}\n\nfunction pointedDown() {\n  path = [];\n  drawing = true;\n}\n\nfunction pointedUp() {\n  drawing = false;\n}\n\nfunction draw() {\n  ctx.clearRect(0, 0, w, h);\n  ctx.beginPath();\n  ctx.moveTo(path[0].x, path[0].y);\n  for (let i = 1; i < path.length; i++) {\n    ctx.lineTo(path[i].x, path[i].y);\n  }\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 2;\n  ctx.stroke();\n  ctx.fillStyle = 'grey';\n  ctx.fill();\n  ctx.closePath();\n\n  const B = barycenter(path);\n\n  ctx.beginPath();\n  ctx.arc(B.x, B.y, 5, 0, 2 * Math.PI, false);\n  ctx.fillStyle = 'red';\n  ctx.fill();\n  ctx.stroke();\n}\n\nfunction barycenter(P: Point[]): Point {\n  const N = P.length;\n  let SX = 0;\n  let SY = 0;\n  let SA = 0;\n  for (let i = 0; i < N; i++) {\n    SX +=\n      (P[i].x + P[(i + 1) % N].x) *\n      (P[i].x * P[(i + 1) % N].y - P[(i + 1) % N].x * P[i].y);\n    SY +=\n      (P[i].y + P[(i + 1) % N].y) *\n      (P[i].x * P[(i + 1) % N].y - P[(i + 1) % N].x * P[i].y);\n    SA += P[i].x * P[(i + 1) % N].y - P[(i + 1) % N].x * P[i].y;\n  }\n  const A = (1 / 2) * SA;\n  const Cx = (1 / (6 * A)) * SX;\n  const Cy = (1 / (6 * A)) * SY;\n\n  console.log(`barycenter: (${Cx},${Cy})`);\n  return { x: Cx, y: Cy };\n}\n\nfunction barycenterBySurface(): Point {\n  //context: CanvasRenderingContext2D\n  const imgArray = ctx.getImageData(0, 0, w, h).data;\n\n  let SX = 0;\n  let SY = 0;\n  let N = 0;\n  for (let i = 0; i < w; i++) {\n    for (let j = 0; j < h; j++) {\n      if (imgArray[4 * (i + w * j) + 3] !== 0) {\n        SX += i;\n        SY += j;\n        N += 1;\n      }\n    }\n  }\n  const Cx = SX / N;\n  const Cy = SY / N;\n  console.log(`barycenterSurf: (${Cx},${Cy})`);\n\n  return { x: Cx, y: Cy };\n}\n\nexport {};\n\ndeclare global {\n  interface Window {\n    path: Point[];\n    barySur: () => Point;\n  }\n}\n\nwindow.path = path;\nwindow.barySur = barycenterBySurface;\n"],"names":["$e366f2c43bf887ab$var$canvas","document","getElementById","$e366f2c43bf887ab$var$ctx","getContext","willReadFrequently","$e366f2c43bf887ab$var$w","width","$e366f2c43bf887ab$var$h","height","console","log","$e366f2c43bf887ab$var$path","$e366f2c43bf887ab$var$lastPoint","x","y","$e366f2c43bf887ab$var$drawing","$e366f2c43bf887ab$var$pointedUp","addEventListener","e","offsetX","offsetY","$e366f2c43bf887ab$var$stickLength","push","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","fillStyle","fill","closePath","B","P","N","SX","SY","SA","A","Cx","Cy","$e366f2c43bf887ab$var$barycenter","arc","Math","PI","$e366f2c43bf887ab$var$draw","window","path","barySur","imgArray","getImageData","data","j"],"version":3,"file":"index.551d3d6a.js.map"}